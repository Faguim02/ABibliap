// Generated by Dagger (https://dagger.dev).
package com.guim.abibliap.data.repository;

import com.guim.abibliap.data.BibleApi;
import com.guim.abibliap.data.local.abbrev_dao.AbbrevDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RemoteDataRepositoryImpl_Factory implements Factory<RemoteDataRepositoryImpl> {
  private final Provider<BibleApi> bibleApiProvider;

  private final Provider<AbbrevDao> abbrevDaoProvider;

  public RemoteDataRepositoryImpl_Factory(Provider<BibleApi> bibleApiProvider,
      Provider<AbbrevDao> abbrevDaoProvider) {
    this.bibleApiProvider = bibleApiProvider;
    this.abbrevDaoProvider = abbrevDaoProvider;
  }

  @Override
  public RemoteDataRepositoryImpl get() {
    return newInstance(bibleApiProvider.get(), abbrevDaoProvider.get());
  }

  public static RemoteDataRepositoryImpl_Factory create(Provider<BibleApi> bibleApiProvider,
      Provider<AbbrevDao> abbrevDaoProvider) {
    return new RemoteDataRepositoryImpl_Factory(bibleApiProvider, abbrevDaoProvider);
  }

  public static RemoteDataRepositoryImpl newInstance(BibleApi bibleApi, AbbrevDao abbrevDao) {
    return new RemoteDataRepositoryImpl(bibleApi, abbrevDao);
  }
}
