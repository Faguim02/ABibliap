// Generated by Dagger (https://dagger.dev).
package com.guim.abibliap.domain.use_case;

import com.guim.abibliap.domain.repository.RemoteDataRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FindAllBooksUseCase_Factory implements Factory<FindAllBooksUseCase> {
  private final Provider<RemoteDataRepository> repositoryProvider;

  public FindAllBooksUseCase_Factory(Provider<RemoteDataRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public FindAllBooksUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static FindAllBooksUseCase_Factory create(
      Provider<RemoteDataRepository> repositoryProvider) {
    return new FindAllBooksUseCase_Factory(repositoryProvider);
  }

  public static FindAllBooksUseCase newInstance(RemoteDataRepository repository) {
    return new FindAllBooksUseCase(repository);
  }
}
